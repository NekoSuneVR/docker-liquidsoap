os: linux
dist: focal
language: shell

env:
  global:
    - IMAGE_NAME=liquidsoap
    - DOCKERHUB_IMAGE_NAME=$DOCKER_USERNAME/$IMAGE_NAME

jobs:
  fast_finish: true
  allow_failures:
    - stage: Push image to extra repositories (allowed to fail)

  include:
    - stage: Backup previous image
      script:
        - docker pull $DOCKERHUB_IMAGE_NAME
        - docker tag $DOCKERHUB_IMAGE_NAME $DOCKERHUB_IMAGE_NAME:previous
        - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
        - docker push $DOCKERHUB_IMAGE_NAME:previous

    - stage: Build new image and push it to Dockerhub
      script:
        - docker build -t $IMAGE_NAME .
        - docker images
        - echo "Pushing image to Dockerhub"
        - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
        - docker tag $IMAGE_NAME $DOCKERHUB_IMAGE_NAME
        - docker push $DOCKERHUB_IMAGE_NAME

    - stage: Push image to extra repositories (allowed to fail)
      name: GitHub Packages
      env:
        - GITHUB_PACKAGES=docker.pkg.github.com
        - GITHUB_PACKAGES_IMAGE_NAME=$GITHUB_PACKAGES/$TRAVIS_REPO_SLUG/$IMAGE_NAME
      script:
        - docker pull $DOCKERHUB_IMAGE_NAME
        - docker tag $DOCKERHUB_IMAGE_NAME $GITHUB_PACKAGES_IMAGE_NAME
        - echo $GITHUB_PAT | docker login $GITHUB_PACKAGES -u $GITHUB_USERNAME --password-stdin
        - docker push $GITHUB_PACKAGES_IMAGE_NAME

    - stage: Push image to extra repositories (allowed to fail)
      name: GitHub Container Registry
      env:
        - GITHUB_CONTAINER_REGISTRY=ghcr.io
        - GITHUB_CONTAINER_REGISTRY_IMAGE_NAME=$GITHUB_CONTAINER_REGISTRY/$GITHUB_USERNAME/$IMAGE_NAME
      script:
        - docker pull $DOCKERHUB_IMAGE_NAME
        - docker tag $DOCKERHUB_IMAGE_NAME $GITHUB_CONTAINER_REGISTRY_IMAGE_NAME
        - echo $GITHUB_PAT | docker login $GITHUB_CONTAINER_REGISTRY -u $GITHUB_USERNAME --password-stdin
        - docker push $GITHUB_CONTAINER_REGISTRY_IMAGE_NAME

    - stage: Push image to extra repositories (allowed to fail)
      name: Quay.io
      env:
        - QUAY_IO=quay.io
        - QUAY_IO_IMAGE_NAME=$QUAY_IO/$QUAY_USERNAME/$IMAGE_NAME
      script:
        - docker pull $DOCKERHUB_IMAGE_NAME
        - docker tag $DOCKERHUB_IMAGE_NAME $QUAY_IO_IMAGE_NAME
        - echo $QUAY_PASSWORD | docker login $QUAY_IO -u $QUAY_USERNAME --password-stdin
        - docker push $QUAY_IO_IMAGE_NAME
